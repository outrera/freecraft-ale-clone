;;   ___________		     _________		      _____  __
;;   \_	  _____/______   ____   ____ \_   ___ \____________ _/ ____\/  |_
;;    |    __) \_  __ \_/ __ \_/ __ \/    \  \/\_  __ \__  \\   __\\   __|
;;    |     \   |  | \/\  ___/\  ___/\     \____|  | \// __ \|  |   |  |
;;    \___  /   |__|    \___  >\___  >\______  /|__|  (____  /__|   |__|
;;	  \/		    \/	   \/	     \/		   \/
;;  ______________________                           ______________________
;;			  T H E   W A R   B E G I N S
;;	   FreeCraft - A free fantasy real time strategy game engine
;;
;;	anim.ccl	-	The unit animation definitions.
;;
;;	(c) Copyright 2000-2002 by Josh Cogliati, Lutz Sammer
;;
;;	FreeCraft is free software; you can redistribute it and/or modify
;;	it under the terms of the GNU General Public License as published
;;	by the Free Software Foundation; only version 2 of the License.
;;
;;	FreeCraft is distributed in the hope that it will be useful,
;;	but WITHOUT ANY WARRANTY; without even the implied warranty of
;;	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;	GNU General Public License for more details.
;;
;;	$Id: anim.ccl,v 1.16 2003/01/18 17:35:42 jsalmon3 Exp $

;;=============================================================================
;;	Define animations.
;;
;;	(define-animations ident 'still script 'move script 'die script
;;		'attack script)
;;
;;	A script is a list of quad numbers.
;;		(#(Flags Pixel Sleep Frame) (#Flags Pixel Sleep Frame) ...)
;;	* Format of quad numbers:
;;		#(Flags Pixel Sleep Frame)
;;	o Flags are the sum of the following:
;;		1 Restart - restart animation
;;		2 Reset   - animation could here be aborted (switch to another)
;;		4 Sound   - play a sound with the animation
;;		8 Missile - fire a missile at this point
;;	o Pixel is the number of pixels to move (if this is a moving animation)
;;	o Sleep is the number of frames to wait for the next animation
;;	o Frame is increment to the frame of the image
;;

;;------
;;	Footman, Grunt, Grom Hellscream, Danath, Korgath Bladefist
(define-animations 'animations-footman
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #16 P32
    #( 0 3   2   0) #( 0 3   1   5) #( 0 3   2   5) #( 0 2   1  10)
    #( 0 3   1  10) #( 0 2   1   0) #( 0 3   2   0) #( 0 3   1  15)
    #( 0 3   2  15) #( 0 2   1  20) #( 0 3   1  20) #( 3 2   1   0))
  'attack '(	; #25
    #( 0 0   3  25) #( 0 0   3  30) #( 0 0   3  35) #(12 0   5  40)
    #( 0 0  10   0) #( 3 0   1   0))
  'die '(	; #107
    #( 0 0   3  45) #( 0 0   3  50) #( 0 0 100  55) #( 3 0   1  55)))

;;------
;;	Peasant, Peon, Peasant, Peon, Peasant, Peon, Peasant, Peon
(define-animations 'animations-peasant
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #16 P32
    #( 0 3   2   0) #( 0 3   1   5) #( 0 3   2   5) #( 0 2   1  10)
    #( 0 3   1  10) #( 0 2   1   0) #( 0 3   2   0) #( 0 3   1  15)
    #( 0 3   2  15) #( 0 2   1  20) #( 0 3   1  20) #( 3 2   1   0))
  'attack '(	; #25
    #( 0 0   3  25) #( 0 0   3  30) #( 0 0   3  35) #(12 0   5  40)
    #( 0 0   3  45) #( 0 0   7  25) #( 3 0   1  25))
  'die '(	; #107
    #( 0 0   3  50) #( 0 0   3  55) #( 0 0 100  60) #( 3 0   1  60)))

;;------
;;	Ballista
(define-animations 'animations-ballista
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #32 P32
    #( 0 0   1   0) #( 0 2   2   5) #( 0 2   2   0) #( 0 2   2   5)
    #( 0 2   2   0) #( 0 2   2   5) #( 0 2   2   0) #( 0 2   2   5)
    #( 0 2   2   0) #( 0 2   2   5) #( 0 2   2   0) #( 0 2   2   5)
    #( 0 2   2   0) #( 0 2   2   5) #( 0 2   2   0) #( 0 2   2   5)
    #( 3 2   1   0))
  'attack '(	; #200
    #( 0 0  25  10) #(12 0  25  15) #( 0 0 100  15) #( 0 0  49   0)
    #( 3 0   1   0)))

;;------
;;	Catapult
(define-animations 'animations-catapult
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #32 P32
    #( 0 0   1   0) #( 0 2   2   5) #( 0 2   2   0) #( 0 2   2   5)
    #( 0 2   2   0) #( 0 2   2   5) #( 0 2   2   0) #( 0 2   2   5)
    #( 0 2   2   0) #( 0 2   2   5) #( 0 2   2   0) #( 0 2   2   5)
    #( 0 2   2   0) #( 0 2   2   5) #( 0 2   2   0) #( 0 2   2   5)
    #( 3 2   1   0))
  'attack '(	; #200
    #(12 0   4  15) #( 0 0   4  10) #( 0 0   3  15) #( 0 0   2  10)
    #( 0 0   2  15) #( 0 0  30  10) #( 0 0   4  15) #( 0 0 100  15)
    #( 0 0  50   0) #( 3 0   1   0)))

;;------
;;	Knight, Paladin, Turalyon, Lothar, Uther Lightbringer
(define-animations 'animations-knight
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #12 P32
    #( 0 3   1   0) #( 0 3   1   5) #( 0 4   2   5) #( 0 3   1  10)
    #( 0 3   1  10) #( 0 3   1  15) #( 0 4   2  15) #( 0 3   1  20)
    #( 0 3   1  20) #( 3 3   1   0))
  'attack '(	; #25
    #( 0 0   3  25) #( 0 0   3  30) #( 0 0   3  35) #(12 0   5  40)
    #( 0 0  10   0) #( 3 0   1   0))
  'die '(	; #507
    #( 0 0   3  45) #( 0 0   3  50) #( 0 0 100  55) #( 0 0 200  60)
    #( 0 0 200  65) #( 3 0   1  65)))

;;------
;;	Ogre, Ogre Mage, Dentarg, Cho'gall
(define-animations 'animations-ogre
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #12 P32
    #( 0 3   1   0) #( 0 3   1   5) #( 0 3   1   5) #( 0 2   1  10)
    #( 0 3   1  10) #( 0 2   1   0) #( 0 3   1   0) #( 0 3   1  15)
    #( 0 3   1  15) #( 0 2   1  20) #( 0 3   1  20) #( 3 2   1   0))
  'attack '(	; #25
    #( 0 0   3  25) #( 0 0   3  30) #( 0 0   3  35) #(12 0   5  40)
    #( 0 0  10   0) #( 3 0   1   0))
  'die '(	; #507
    #( 0 0   3  45) #( 0 0   3  50) #( 0 0 100  55) #( 0 0 200  60)
    #( 0 0 200  65) #( 3 0   1  65)))

;;------
;;	Archer, Ranger, Alleria
(define-animations 'animations-archer
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #16 P32
    #( 0 3   2   0) #( 0 3   1   5) #( 0 3   2   5) #( 0 2   1  10)
    #( 0 3   1  10) #( 0 2   1   0) #( 0 3   2   0) #( 0 3   1  15)
    #( 0 3   2  15) #( 0 2   1  20) #( 0 3   1  20) #( 3 2   1   0))
  'attack '(	; #65
    #( 0 0  10  25) #(12 0  10  30) #( 0 0  44   0) #( 3 0   1   0))
  'die '(	; #107
    #( 0 0   3  35) #( 0 0   3  40) #( 0 0 100  45) #( 3 0   1  45)))

;;------
;;	Troll Axethrower, Berserker, Zuljin
(define-animations 'animations-axethrower
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #16 P32
    #( 0 3   2   0) #( 0 3   1   5) #( 0 3   2   5) #( 0 2   1  10)
    #( 0 3   1  10) #( 0 2   1   0) #( 0 3   2   0) #( 0 3   1  15)
    #( 0 3   2  15) #( 0 2   1  20) #( 0 3   1  20) #( 3 2   1   0))
  'attack '(	; #65
    #( 0 0   3  25) #( 0 0   3  30) #( 0 0   3  35) #(12 0   3  40)
    #( 0 0  52   0) #( 3 0   1   0))
  'die '(	; #107
    #( 0 0   3  45) #( 0 0   3  50) #( 0 0 100  55) #( 3 0   1  55)))

;;------
;;	Mage, Khadgar
(define-animations 'animations-mage
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #18 P32
    #( 0 3   2   0) #( 0 3   1   5) #( 0 3   2   5) #( 0 2   1  10)
    #( 0 3   2  10) #( 0 2   1   0) #( 0 3   2   0) #( 0 3   1  15)
    #( 0 3   2  15) #( 0 2   1  20) #( 0 3   2  20) #( 3 2   1   0))
  'attack '(	; #40
    #( 0 0   5  25) #( 0 0   5  30) #(12 0   7  35) #( 0 0   5  40)
    #( 0 0  17   0) #( 3 0   1   0))
  'die '(	; #36
    #( 0 0   5  45) #( 0 0   5  50) #( 0 0   5  55) #( 0 0   5  60)
    #( 0 0   5  65) #( 0 0   5  70) #( 0 0   5  75) #( 3 0   1  75)))

;;------
;;	Death Knight, Teron Gorefiend, Gul'dan
(define-animations 'animations-death-knight
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #19 P32
    #( 0 3   2   0) #( 0 3   2   5) #( 0 4   2   5) #( 0 3   2  10)
    #( 0 3   2  10) #( 0 3   2  15) #( 0 4   2  15) #( 0 3   2  20)
    #( 0 3   2  20) #( 3 3   1   0))
  'attack '(	; #40
    #( 0 0   5  25) #( 0 0   5  30) #(12 0   7  35) #( 0 0   5  40)
    #( 0 0  17   0) #( 3 0   1   0))
  'die '(	; #21
    #( 0 0   5  45) #( 0 0   5  50) #( 0 0   5  55) #( 0 0   5  60)
    #( 3 0   1  60)))

;;------
;;	Dwarves
(define-animations 'animations-dwarves
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #14 P32
    #( 0 3   2   0) #( 0 3   1  10) #( 0 4   2  10) #( 0 3   1  25)
    #( 0 3   2  25) #( 0 3   1  40) #( 0 4   2  40) #( 0 3   1  55)
    #( 0 3   1  55) #( 3 3   1   0))
  'attack '(	; #25
    #( 0 0   3  15) #(12 0   5  30) #( 0 0   3  45) #( 0 0  13   0)
    #( 3 0   1   0))
  'die '(	; #16
    #( 0 0   3   5) #( 0 0   3  20) #( 0 0   3  35) #( 0 0   3  50)
    #( 0 0   3  60) #( 3 0   1  60)))

;;------
;;	Goblin Sappers
(define-animations 'animations-goblin-sappers
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #14 P32
    #( 0 3   1   0) #( 0 3   1  10) #( 0 2   1  10) #( 0 3   2  25)
    #( 0 3   1  25) #( 0 2   1  40) #( 0 3   1  40) #( 0 3   1  55)
    #( 0 2   1  55) #( 0 3   2  65) #( 0 3   1  65) #( 3 2   1   0))
  'attack '(	; #25
    #( 0 0   3  15) #(12 0   5  30) #( 0 0   3  45) #( 0 0  13   0)
    #( 3 0   1   0))
  'die '(	; #19
    #( 0 0   3   5) #( 0 0   3  20) #( 0 0   3  35) #( 0 0   3  50)
    #( 0 0   3  60) #( 0 0   3  70) #( 3 0   1  70)))

;;------
;;	Kurdan and Sky'ree, Gryphon Rider
(if (symbol-bound? 'freecraft-feature-new-ships ())
(define-animations 'animations-kurdan-and-sky-ree
  'still '(	; #24
    #( 2 0   6   0) #( 2 0   6   5) #( 2 0   6  10) #( 3 0   6  15))
  'move '(	; #24 P32
    #( 0 0   1   0) #( 0 2   2   0) #( 0 3   2   0) #( 0 3   2   5)
    #( 0 2   2   5) #( 0 3   2   5) #( 0 3   2  10) #( 0 2   2  10)
    #( 0 3   2  10) #( 0 3   2  15) #( 0 2   2  15) #( 0 3   2  15)
    #( 3 3   1   0))
  'attack '(	; #1
    #( 0 0   6   0) #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15)
    #( 2 0   1  15) #( 0 0   6  20) #( 0 0   6  25) #(12 0   8  30)
    #( 0 0   6   0) #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15)
    #( 0 0   6   0) #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15)
    #( 0 0   6   0) #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15)
    #( 0 0   6   0) #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15)
    #( 0 0   6   0) #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15)
    #( 0 0   6   0) #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15)
    #( 1 0   1   0) #( 0 0   6   0) #( 0 0   6   5) #( 0 0   6  10)
    #( 0 0   6  15) #( 2 0   1  15) #(12 0  20  20) #( 0 0   6   0)
    #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15) #( 0 0   6   0)
    #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15) #( 0 0   6   0)
    #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15) #( 0 0   6   0)
    #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15) #( 0 0   6   0)
    #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15) #( 0 0   6   0)
    #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15) #( 1 0   1   0)
    #( 3 0   1   0))
  'die '(	; #31
    #( 0 0   5  35) #( 0 0   5  40) #( 0 0   5  45) #( 0 0   5  50)
    #( 0 0   5  55) #( 0 0   5  60) #( 3 0   1  60)))
(define-animations 'animations-kurdan-and-sky-ree
  'still '(	; #24
    #( 2 0   6   0) #( 2 0   6   5) #( 2 0   6  10) #( 3 0   6  15))
  'move '(	; #12 P32
    #( 0 0   1   0) #( 0 3   1   0) #( 0 3   1   0) #( 0 3   1   5)
    #( 0 2   1   5) #( 0 3   1   5) #( 0 3   1  10) #( 0 3   1  10)
    #( 0 3   1  10) #( 0 3   1  15) #( 0 3   1  15) #( 3 3   1   0))
  'attack '(	; #1
    #( 0 0   6   0) #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15)
    #( 2 0   1  15) #( 0 0   6  20) #( 0 0   6  25) #(12 0   8  30)
    #( 0 0   6   0) #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15)
    #( 0 0   6   0) #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15)
    #( 0 0   6   0) #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15)
    #( 0 0   6   0) #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15)
    #( 0 0   6   0) #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15)
    #( 0 0   6   0) #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15)
    #( 1 0   1   0) #( 0 0   6   0) #( 0 0   6   5) #( 0 0   6  10)
    #( 0 0   6  15) #( 2 0   1  15) #(12 0  20  20) #( 0 0   6   0)
    #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15) #( 0 0   6   0)
    #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15) #( 0 0   6   0)
    #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15) #( 0 0   6   0)
    #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15) #( 0 0   6   0)
    #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15) #( 0 0   6   0)
    #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15) #( 1 0   1   0)
    #( 3 0   1   0))
  'die '(	; #31
    #( 0 0   5  35) #( 0 0   5  40) #( 0 0   5  45) #( 0 0   5  50)
    #( 0 0   5  55) #( 0 0   5  60) #( 3 0   1  60))))

;;------
;;	Oil tanker, Oil tanker, Oil tanker, Oil tanker
(if (symbol-bound? 'freecraft-feature-new-ships ())
(define-animations 'animations-human-oil-tanker
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #32 P32
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 3 1   1   0))
  'attack '(	; #130
    #(12 0  30   0) #( 0 0  99   0) #( 3 0   1   0))
  'die '(	; #101
    #( 0 0  50   5) #( 0 0  50  10) #( 3 0   1  10)))
(define-animations 'animations-human-oil-tanker
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #16 P32
    #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0)
    #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0)
    #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0)
    #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0) #( 3 2   1   0))
  'attack '(	; #130
    #(12 0  30   0) #( 0 0  99   0) #( 3 0   1   0))
  'die '(	; #101
    #( 0 0  50   5) #( 0 0  50  10) #( 3 0   1  10))))

;;------
;;	Transport, Transport
(if (symbol-bound? 'freecraft-feature-new-ships ())
(define-animations 'animations-human-transport
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #32 P32
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 3 1   1   0))
  'attack '(	; #120
    #(12 0 119   0) #( 3 0   1   0))
  'die '(	; #101
    #( 0 0  50   5) #( 0 0  50  10) #( 3 0   1  10)))
(define-animations 'animations-human-transport
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #16 P32
    #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0)
    #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0)
    #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0)
    #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0) #( 3 2   1   0))
  'attack '(	; #120
    #(12 0 119   0) #( 3 0   1   0))
  'die '(	; #101
    #( 0 0  50   5) #( 0 0  50  10) #( 3 0   1  10))))

;;------
;;	Elven Destroyer, Troll Destroyer
(if (symbol-bound? 'freecraft-feature-new-ships ())
(define-animations 'animations-elven-destroyer
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #32 P32
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   1   0) #( 3 1   1   0))
  'attack '(	; #120
    #(12 0 119   0) #( 3 0   1   0))
  'die '(	; #101
    #( 0 0  50   5) #( 0 0  50  10) #( 3 0   1  10)))
(define-animations 'animations-elven-destroyer
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #16 P32
    #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0)
    #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0)
    #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0)
    #( 0 2   1   0) #( 0 2   1   0) #( 0 2   1   0) #( 3 2   1   0))
  'attack '(	; #120
    #(12 0 119   0) #( 3 0   1   0))
  'die '(	; #101
    #( 0 0  50   5) #( 0 0  50  10) #( 3 0   1  10))))

;;------
;;	Battleship, Ogre Juggernaught
(if (symbol-bound? 'freecraft-feature-new-ships ())
(define-animations 'animations-battleship
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #53 P32
    #( 0 1   2   0) #( 0 1   2   0) #( 0 1   1   0) #( 0 1   2   0)
    #( 0 1   2   0) #( 0 1   1   0) #( 0 1   2   0) #( 0 1   2   0)
    #( 0 1   1   0) #( 0 1   2   0) #( 0 1   2   0) #( 0 1   1   0)
    #( 0 1   2   0) #( 0 1   2   0) #( 0 1   1   0) #( 0 1   2   0)
    #( 0 1   2   0) #( 0 1   1   0) #( 0 1   2   0) #( 0 1   2   0)
    #( 0 1   1   0) #( 0 1   2   0) #( 0 1   2   0) #( 0 1   1   0)
    #( 0 1   2   0) #( 0 1   2   0) #( 0 1   1   0) #( 0 1   2   0)
    #( 0 1   2   0) #( 0 1   1   0) #( 0 1   2   0) #( 3 1   1   0))
  'attack '(	; #230
    #(12 0 127   0) #( 0 0 102   0) #( 3 0   1   0))
  'die '(	; #101
    #( 0 0  50   5) #( 0 0  50  10) #( 3 0   1  10)))
(define-animations 'animations-battleship
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #26 P32
    #( 0 2   2   0) #( 0 2   2   0) #( 0 2   1   0) #( 0 2   2   0)
    #( 0 2   2   0) #( 0 2   1   0) #( 0 2   2   0) #( 0 2   2   0)
    #( 0 2   1   0) #( 0 2   2   0) #( 0 2   2   0) #( 0 2   1   0)
    #( 0 2   2   0) #( 0 2   1   0) #( 0 2   2   0) #( 3 2   1   0))
  'attack '(	; #230
    #(12 0 127   0) #( 0 0 102   0) #( 3 0   1   0))
  'die '(	; #101
    #( 0 0  50   5) #( 0 0  50  10) #( 3 0   1  10))))

;;------
;;	Deathwing, Dragon
(if (symbol-bound? 'freecraft-feature-new-ships ())
(define-animations 'animations-deathwing
  'still '(	; #24
    #( 2 0   6   0) #( 2 0   6   5) #( 2 0   6  10) #( 3 0   6  15))
  'move '(	; #24 P32
    #( 0 0   1   0) #( 0 2   2   0) #( 0 3   2   0) #( 0 3   2   5)
    #( 0 2   2   5) #( 0 3   2   5) #( 0 3   2  10) #( 0 2   2  10)
    #( 0 3   2  10) #( 0 3   2  15) #( 0 2   2  15) #( 0 3   2  15)
    #( 3 3   1   0))
  'attack '(	; #1
    #( 0 0   6   0) #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15)
    #( 2 0   1  15) #(12 0  20  20) #( 0 0   6   0) #( 0 0   6   5)
    #( 0 0   6  10) #( 0 0   6  15) #( 0 0   6   0) #( 0 0   6   5)
    #( 0 0   6  10) #( 0 0   6  15) #( 0 0   6   0) #( 0 0   6   5)
    #( 0 0   6  10) #( 0 0   6  15) #( 0 0   6   0) #( 0 0   6   5)
    #( 0 0   6  10) #( 0 0   6  15) #( 0 0   6   0) #( 0 0   6   5)
    #( 0 0   6  10) #( 0 0   6  15) #( 0 0   6   0) #( 0 0   6   5)
    #( 0 0   6  10) #( 0 0   6  15) #( 1 0   1   0) #( 3 0   1   0))
  'die '(	; #26
    #( 0 0   5  25) #( 0 0   5  30) #( 0 0   5  35) #( 0 0   5  40)
    #( 0 0   5  45) #( 3 0   1  45)))
(define-animations 'animations-deathwing
  'still '(	; #24
    #( 2 0   6   0) #( 2 0   6   5) #( 2 0   6  10) #( 3 0   6  15))
  'move '(	; #12 P32
    #( 0 0   1   0) #( 0 3   1   0) #( 0 3   1   0) #( 0 3   1   5)
    #( 0 3   1   5) #( 0 3   1   5) #( 0 3   1  10) #( 0 2   1  10)
    #( 0 3   1  10) #( 0 3   1  15) #( 0 3   1  15) #( 3 3   1   0))
  'attack '(	; #1
    #( 0 0   6   0) #( 0 0   6   5) #( 0 0   6  10) #( 0 0   6  15)
    #( 2 0   1  15) #(12 0  20  20) #( 0 0   6   0) #( 0 0   6   5)
    #( 0 0   6  10) #( 0 0   6  15) #( 0 0   6   0) #( 0 0   6   5)
    #( 0 0   6  10) #( 0 0   6  15) #( 0 0   6   0) #( 0 0   6   5)
    #( 0 0   6  10) #( 0 0   6  15) #( 0 0   6   0) #( 0 0   6   5)
    #( 0 0   6  10) #( 0 0   6  15) #( 0 0   6   0) #( 0 0   6   5)
    #( 0 0   6  10) #( 0 0   6  15) #( 0 0   6   0) #( 0 0   6   5)
    #( 0 0   6  10) #( 0 0   6  15) #( 1 0   1   0) #( 3 0   1   0))
  'die '(	; #26
    #( 0 0   5  25) #( 0 0   5  30) #( 0 0   5  35) #( 0 0   5  40)
    #( 0 0   5  45) #( 3 0   1  45))))

;;------
;;	Gnomish Submarine, Giant Turtle
(if (symbol-bound? 'freecraft-feature-new-ships ())
(define-animations 'animations-gnomish-submarine
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #43 P32
    #( 0 1   2   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   2   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   2   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   2   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   2   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   2   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   2   0) #( 0 1   1   0)
    #( 0 1   1   0) #( 0 1   2   0) #( 0 1   1   0) #( 0 1   1   0)
    #( 0 1   2   0) #( 0 1   1   0) #( 0 1   1   0) #( 0 1   2   0)
    #( 0 1   1   0) #( 0 1   1   0) #( 0 1   2   0) #( 3 1   1   0))
  'attack '(	; #115
    #( 0 0  10   5) #( 0 0  25  10) #(12 0  25  10) #( 0 0  25   5)
    #( 0 0  29   0) #( 3 0   1   0))
  'die '(	; #1
    #( 3 0   1   0)))
(define-animations 'animations-gnomish-submarine
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #21 P32
    #( 0 2   2   0) #( 0 2   1   0) #( 0 2   1   0) #( 0 2   2   0)
    #( 0 2   1   0) #( 0 2   1   0) #( 0 2   2   0) #( 0 2   1   0)
    #( 0 2   1   0) #( 0 2   2   0) #( 0 2   1   0) #( 0 2   1   0)
    #( 0 2   1   0) #( 0 2   1   0) #( 0 2   2   0) #( 3 2   1   0))
  'attack '(	; #115
    #( 0 0  10   5) #( 0 0  25  10) #(12 0  25  10) #( 0 0  25   5)
    #( 0 0  29   0) #( 3 0   1   0))
  'die '(	; #1
    #( 3 0   1   0))))

;;------
;;	Gnomish Flying Machine
(if (symbol-bound? 'freecraft-feature-new-ships ())
(define-animations 'animations-gnomish-flying-machine
  'still '(	; #4
    #( 2 0   1   0) #( 2 0   1   5) #( 2 0   1   5) #( 3 0   1   0))
  'move '(	; #20 P32
    #( 0 2   1   0) #( 0 1   1   5) #( 0 2   1   5) #( 0 2   1   0)
    #( 0 1   1   0) #( 0 2   1   5) #( 0 1   1   5) #( 0 2   1   0)
    #( 0 2   1   0) #( 0 1   1   5) #( 0 2   1   5) #( 0 1   1   0)
    #( 0 2   1   0) #( 0 2   1   5) #( 0 1   1   5) #( 0 2   1   0)
    #( 0 1   1   0) #( 0 2   1   5) #( 0 2   1   5) #( 3 1   1   0))
  'attack '(	; #1
    #( 3 0   1   0))
  'die '(	; #1
    #( 3 0   1   0)))
(define-animations 'animations-gnomish-flying-machine
  'still '(	; #4
    #( 2 0   1   0) #( 2 0   1   5) #( 2 0   1   5) #( 3 0   1   0))
  'move '(	; #10 P32
    #( 0 4   1   5) #( 0 3   1   5) #( 0 3   1   5) #( 0 4   1   0)
    #( 0 3   1   0) #( 0 3   1   5) #( 0 4   1   5) #( 0 3   1   5)
    #( 0 3   1   0) #( 3 3   1   0))
  'attack '(	; #1
    #( 3 0   1   0))
  'die '(	; #1
    #( 3 0   1   0))) )

;;------
;;	Goblin Zeppelin
(if (symbol-bound? 'freecraft-feature-new-ships ())
(define-animations 'animations-goblin-zeppelin
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #20 P32
    #( 0 2   1   0) #( 0 1   1   0) #( 0 2   1   0) #( 0 2   1   0)
    #( 0 1   1   0) #( 0 2   1   0) #( 0 1   1   0) #( 0 2   1   0)
    #( 0 2   1   0) #( 0 1   1   0) #( 0 2   1   0) #( 0 1   1   0)
    #( 0 2   1   0) #( 0 2   1   0) #( 0 1   1   0) #( 0 2   1   0)
    #( 0 1   1   0) #( 0 2   1   0) #( 0 2   1   0) #( 3 1   1   0))
  'attack '(	; #1
    #( 3 0   1   0)))
(define-animations 'animations-goblin-zeppelin
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #10 P32
    #( 0 4   1   0) #( 0 3   1   0) #( 0 3   1   0) #( 0 3   1   0)
    #( 0 3   1   0) #( 0 4   1   0) #( 0 3   1   0) #( 0 3   1   0)
    #( 0 3   1   0) #( 3 3   1   0))
  'attack '(	; #1
    #( 3 0   1   0))) )

;;------
;;	Eye of Kilrogg
(if (symbol-bound? 'freecraft-feature-new-ships ())
(define-animations 'animations-eye-of-vision
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #8 P32
    #( 0 4   1   0) #( 0 4   1   0) #( 0 4   1   0) #( 0 4   1   0)
    #( 0 4   1   0) #( 0 4   1   0) #( 0 4   1   0) #( 3 4   1   0))
  'attack '(	; #1
    #( 3 0   1   0)))
(define-animations 'animations-eye-of-vision
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #4 P32
    #( 0 8   1   0) #( 0 8   1   0) #( 0 8   1   0) #( 3 8   1   0))
  'attack '(	; #1
    #( 3 0   1   0))) )

;;------
;;	Skeleton
(define-animations 'animations-skeleton
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #21 P32
    #( 0 3   2   0) #( 0 3   2  10) #( 0 3   1  10) #( 0 2   2  25)
    #( 0 3   3  25) #( 0 2   1   0) #( 0 3   2   0) #( 0 3   2  40)
    #( 0 3   1  40) #( 0 2   2  55) #( 0 3   2  55) #( 3 2   1   0))
  'attack '(	; #35
    #( 0 0   4  15) #( 0 0   4  30) #(12 0   4  45) #( 0 0   4  60)
    #( 0 0  18   0) #( 3 0   1   0))
  'die '(	; #16
    #( 0 0   3   5) #( 0 0   3  20) #( 0 0   3  35) #( 0 0   3  50)
    #( 0 0   3  65) #( 3 0   1  65)))

;;------
;;	Daemon
(if (symbol-bound? 'freecraft-feature-new-ships ())
(define-animations 'animations-daemon
  'still '(	; #16
    #( 2 0   4   0) #( 2 0   4   5) #( 2 0   4  10) #( 3 0   4  15))
  'move '(	; #24 P32
    #( 0 3   2   0) #( 0 2   1   0) #( 0 2   2   5) #( 0 2   2   5)
    #( 0 2   1   5) #( 0 2   2  10) #( 0 2   1  10) #( 0 3   2  10)
    #( 0 2   2  15) #( 0 2   1  15) #( 0 2   2  15) #( 0 2   1  20)
    #( 0 2   2  20) #( 0 2   2  20) #( 3 2   1   0))
  'attack '(	; #60
    #( 0 0   4   0) #( 0 0   4   5) #( 0 0   4  10) #( 0 0   4  15)
    #( 0 0   4  20) #( 2 0   1  20) #( 0 0   4  25) #( 0 0   4  30)
    #( 0 0   4  35) #(12 0   4  40) #( 0 0   4  45) #( 1 0   1   0)
    #(12 0  59   0) #( 3 0   1   0))
  'die '(	; #21
    #( 0 0   5  50) #( 0 0   5  55) #( 0 0   5  60) #( 0 0   5  65)
    #( 3 0   1  65)))
(define-animations 'animations-daemon
  'still '(	; #16
    #( 2 0   4   0) #( 2 0   4   5) #( 2 0   4  10) #( 3 0   4  15))
  'move '(	; #12 P32
    #( 0 3   1   0) #( 0 3   1   0) #( 0 2   1   5) #( 0 3   1   5)
    #( 0 2   1  10) #( 0 3   1  10) #( 0 3   1  10) #( 0 2   1  15)
    #( 0 3   1  15) #( 0 3   1  20) #( 0 3   1  20) #( 3 2   1   0))
  'attack '(	; #60
    #( 0 0   4   0) #( 0 0   4   5) #( 0 0   4  10) #( 0 0   4  15)
    #( 0 0   4  20) #( 2 0   1  20) #( 0 0   4  25) #( 0 0   4  30)
    #( 0 0   4  35) #(12 0   4  40) #( 0 0   4  45) #( 1 0   1   0)
    #(12 0  59   0) #( 3 0   1   0))
  'die '(	; #21
    #( 0 0   5  50) #( 0 0   5  55) #( 0 0   5  60) #( 0 0   5  65)
    #( 3 0   1  65))) )

;;------
;;	Critter
(define-animations 'animations-critter
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'move '(	; #48 P32
    #( 0 2   2   0) #( 0 2   3   0) #( 0 2   3   0) #( 0 2   3   0)
    #( 0 2   3   0) #( 0 2   3   0) #( 0 2   3   0) #( 0 2   3   0)
    #( 0 2   3   0) #( 0 2   3   0) #( 0 2   3   0) #( 0 2   3   0)
    #( 0 2   3   0) #( 0 2   3   0) #( 0 2   3   0) #( 0 2   3   0)
    #( 3 0   1   0))
  'attack '(	; #1
    #(11 0   1   0))
  'die '(	; #201
    #( 0 0 200   5) #( 3 0   1   5)))

;;------
;;	Farm, Pig Farm, Barracks, Barracks, Church, Altar of Storms,
;;	Scout Tower, Scout Tower, Stables, Ogre Mound, Gnomish Inventor,
;;	Goblin Alchemist, Gryphon Aviary, Dragon Roost, Shipyard, Shipyard,
;;	Town Hall, Great Hall, Elven Lumber Mill, Troll Lumber Mill, Foundry,
;;	Foundry, Mage Tower, Temple of the Damned, Blacksmith, Blacksmith,
;;	Refinery, Refinery, Oil Platform, Oil Platform, Keep, Stronghold,
;;	Castle, Fortress, Gold Mine, Oil Patch, Start Location, Start Location,
;;	Circle of Power, Dark Portal, Runestone, Wall, Wall
(define-animations 'animations-building
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0)))

;;------
;;	Guard Tower, Guard Tower
(define-animations 'animations-human-guard-tower
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'attack '(	; #60
    #(12 0  59   0) #( 3 0   1   0)))

;;------
;;	Cannon Tower, Cannon Tower
(define-animations 'animations-human-cannon-tower
  'still '(	; #5
    #( 0 0   4   0) #( 3 0   1   0))
  'attack '(	; #151
    #(12 0 150   0) #( 3 0   1   0)))

;;------
;;	Dead Body
(define-animations 'animations-dead-body
  'die '(	; #201
    ;;	Corpse:		Orcish
    #( 0 0 200   5) #(16 0 200  10) #( 0 0 200  15) #( 0 0 200  20)
    #( 0 0 200  25) #( 3 0   1  25)
    ;;	Corpse:		Human
    #( 0 0 200   0) #(16 0 200  10) #( 0 0 200  15) #( 0 0 200  20)
    #( 0 0 200  25) #( 3 0   1  25)
    ;;	Corpse:		Ships
    #( 0 0 100  30) #(16 0 100  30) #( 3 0   1  30)))

;;------
;;	Destroyed 1x1 Place, Destroyed 2x2 Place,
;;	Destroyed 3x3 Place, Destroyed 4x4 Place
(define-animations 'animations-destroyed-place
  'die '(	; #401
    ;;	Destroyed land site
    #( 0 0 200   0) #(16 0 200   1) #( 3 0   1   1)
    ;;	Destroyed water site
    #( 0 0 200   2) #(16 0 200   3) #( 3 0   1   3)))
